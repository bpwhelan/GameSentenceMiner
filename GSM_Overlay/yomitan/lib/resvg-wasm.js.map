{
  "version": 3,
  "sources": ["../../node_modules/@resvg/resvg-wasm/index.mjs"],
  "sourcesContent": ["// wasm/dist/index.js\nvar wasm;\nvar heap = new Array(128).fill(void 0);\nheap.push(void 0, null, true, false);\nvar heap_next = heap.length;\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length)\n    heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\nfunction getObject(idx) {\n  return heap[idx];\n}\nfunction dropObject(idx) {\n  if (idx < 132)\n    return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\nvar WASM_VECTOR_LEN = 0;\nvar cachedUint8Memory0 = null;\nfunction getUint8Memory0() {\n  if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n    cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n  return cachedUint8Memory0;\n}\nvar cachedTextEncoder = typeof TextEncoder !== \"undefined\" ? new TextEncoder(\"utf-8\") : { encode: () => {\n  throw Error(\"TextEncoder not available\");\n} };\nvar encodeString = typeof cachedTextEncoder.encodeInto === \"function\" ? function(arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function(arg, view) {\n  const buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nfunction passStringToWasm0(arg, malloc, realloc) {\n  if (realloc === void 0) {\n    const buf = cachedTextEncoder.encode(arg);\n    const ptr2 = malloc(buf.length, 1) >>> 0;\n    getUint8Memory0().subarray(ptr2, ptr2 + buf.length).set(buf);\n    WASM_VECTOR_LEN = buf.length;\n    return ptr2;\n  }\n  let len = arg.length;\n  let ptr = malloc(len, 1) >>> 0;\n  const mem = getUint8Memory0();\n  let offset = 0;\n  for (; offset < len; offset++) {\n    const code = arg.charCodeAt(offset);\n    if (code > 127)\n      break;\n    mem[ptr + offset] = code;\n  }\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n    ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n    const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n    const ret = encodeString(arg, view);\n    offset += ret.written;\n    ptr = realloc(ptr, len, offset, 1) >>> 0;\n  }\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\nfunction isLikeNone(x) {\n  return x === void 0 || x === null;\n}\nvar cachedInt32Memory0 = null;\nfunction getInt32Memory0() {\n  if (cachedInt32Memory0 === null || cachedInt32Memory0.byteLength === 0) {\n    cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n  return cachedInt32Memory0;\n}\nvar cachedTextDecoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-8\", { ignoreBOM: true, fatal: true }) : { decode: () => {\n  throw Error(\"TextDecoder not available\");\n} };\nif (typeof TextDecoder !== \"undefined\") {\n  cachedTextDecoder.decode();\n}\nfunction getStringFromWasm0(ptr, len) {\n  ptr = ptr >>> 0;\n  return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\nfunction _assertClass(instance, klass) {\n  if (!(instance instanceof klass)) {\n    throw new Error(`expected instance of ${klass.name}`);\n  }\n  return instance.ptr;\n}\nfunction handleError(f, args) {\n  try {\n    return f.apply(this, args);\n  } catch (e) {\n    wasm.__wbindgen_exn_store(addHeapObject(e));\n  }\n}\nvar BBoxFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {\n}, unregister: () => {\n} } : new FinalizationRegistry((ptr) => wasm.__wbg_bbox_free(ptr >>> 0));\nvar BBox = class _BBox {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(_BBox.prototype);\n    obj.__wbg_ptr = ptr;\n    BBoxFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    BBoxFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_bbox_free(ptr);\n  }\n  /**\n  * @returns {number}\n  */\n  get x() {\n    const ret = wasm.__wbg_get_bbox_x(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @param {number} arg0\n  */\n  set x(arg0) {\n    wasm.__wbg_set_bbox_x(this.__wbg_ptr, arg0);\n  }\n  /**\n  * @returns {number}\n  */\n  get y() {\n    const ret = wasm.__wbg_get_bbox_y(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @param {number} arg0\n  */\n  set y(arg0) {\n    wasm.__wbg_set_bbox_y(this.__wbg_ptr, arg0);\n  }\n  /**\n  * @returns {number}\n  */\n  get width() {\n    const ret = wasm.__wbg_get_bbox_width(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @param {number} arg0\n  */\n  set width(arg0) {\n    wasm.__wbg_set_bbox_width(this.__wbg_ptr, arg0);\n  }\n  /**\n  * @returns {number}\n  */\n  get height() {\n    const ret = wasm.__wbg_get_bbox_height(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * @param {number} arg0\n  */\n  set height(arg0) {\n    wasm.__wbg_set_bbox_height(this.__wbg_ptr, arg0);\n  }\n};\nvar RenderedImageFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {\n}, unregister: () => {\n} } : new FinalizationRegistry((ptr) => wasm.__wbg_renderedimage_free(ptr >>> 0));\nvar RenderedImage = class _RenderedImage {\n  static __wrap(ptr) {\n    ptr = ptr >>> 0;\n    const obj = Object.create(_RenderedImage.prototype);\n    obj.__wbg_ptr = ptr;\n    RenderedImageFinalization.register(obj, obj.__wbg_ptr, obj);\n    return obj;\n  }\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    RenderedImageFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_renderedimage_free(ptr);\n  }\n  /**\n  * Get the PNG width\n  * @returns {number}\n  */\n  get width() {\n    const ret = wasm.renderedimage_width(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * Get the PNG height\n  * @returns {number}\n  */\n  get height() {\n    const ret = wasm.renderedimage_height(this.__wbg_ptr);\n    return ret >>> 0;\n  }\n  /**\n  * Write the image data to Uint8Array\n  * @returns {Uint8Array}\n  */\n  asPng() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.renderedimage_asPng(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * Get the RGBA pixels of the image\n  * @returns {Uint8Array}\n  */\n  get pixels() {\n    const ret = wasm.renderedimage_pixels(this.__wbg_ptr);\n    return takeObject(ret);\n  }\n};\nvar ResvgFinalization = typeof FinalizationRegistry === \"undefined\" ? { register: () => {\n}, unregister: () => {\n} } : new FinalizationRegistry((ptr) => wasm.__wbg_resvg_free(ptr >>> 0));\nvar Resvg = class {\n  __destroy_into_raw() {\n    const ptr = this.__wbg_ptr;\n    this.__wbg_ptr = 0;\n    ResvgFinalization.unregister(this);\n    return ptr;\n  }\n  free() {\n    const ptr = this.__destroy_into_raw();\n    wasm.__wbg_resvg_free(ptr);\n  }\n  /**\n  * @param {Uint8Array | string} svg\n  * @param {string | undefined} [options]\n  * @param {Array<any> | undefined} [custom_font_buffers]\n  */\n  constructor(svg, options, custom_font_buffers) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      var ptr0 = isLikeNone(options) ? 0 : passStringToWasm0(options, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      var len0 = WASM_VECTOR_LEN;\n      wasm.resvg_new(retptr, addHeapObject(svg), ptr0, len0, isLikeNone(custom_font_buffers) ? 0 : addHeapObject(custom_font_buffers));\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      this.__wbg_ptr = r0 >>> 0;\n      return this;\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * Get the SVG width\n  * @returns {number}\n  */\n  get width() {\n    const ret = wasm.resvg_width(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * Get the SVG height\n  * @returns {number}\n  */\n  get height() {\n    const ret = wasm.resvg_height(this.__wbg_ptr);\n    return ret;\n  }\n  /**\n  * Renders an SVG in Wasm\n  * @returns {RenderedImage}\n  */\n  render() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.resvg_render(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return RenderedImage.__wrap(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * Output usvg-simplified SVG string\n  * @returns {string}\n  */\n  toString() {\n    let deferred1_0;\n    let deferred1_1;\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.resvg_toString(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      deferred1_0 = r0;\n      deferred1_1 = r1;\n      return getStringFromWasm0(r0, r1);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n      wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n    }\n  }\n  /**\n  * Calculate a maximum bounding box of all visible elements in this SVG.\n  *\n  * Note: path bounding box are approx values.\n  * @returns {BBox | undefined}\n  */\n  innerBBox() {\n    const ret = wasm.resvg_innerBBox(this.__wbg_ptr);\n    return ret === 0 ? void 0 : BBox.__wrap(ret);\n  }\n  /**\n  * Calculate a maximum bounding box of all visible elements in this SVG.\n  * This will first apply transform.\n  * Similar to `SVGGraphicsElement.getBBox()` DOM API.\n  * @returns {BBox | undefined}\n  */\n  getBBox() {\n    const ret = wasm.resvg_getBBox(this.__wbg_ptr);\n    return ret === 0 ? void 0 : BBox.__wrap(ret);\n  }\n  /**\n  * Use a given `BBox` to crop the svg. Currently this method simply changes\n  * the viewbox/size of the svg and do not move the elements for simplicity\n  * @param {BBox} bbox\n  */\n  cropByBBox(bbox) {\n    _assertClass(bbox, BBox);\n    wasm.resvg_cropByBBox(this.__wbg_ptr, bbox.__wbg_ptr);\n  }\n  /**\n  * @returns {Array<any>}\n  */\n  imagesToResolve() {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      wasm.resvg_imagesToResolve(retptr, this.__wbg_ptr);\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      var r2 = getInt32Memory0()[retptr / 4 + 2];\n      if (r2) {\n        throw takeObject(r1);\n      }\n      return takeObject(r0);\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n  /**\n  * @param {string} href\n  * @param {Uint8Array} buffer\n  */\n  resolveImage(href, buffer) {\n    try {\n      const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n      const ptr0 = passStringToWasm0(href, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n      const len0 = WASM_VECTOR_LEN;\n      wasm.resvg_resolveImage(retptr, this.__wbg_ptr, ptr0, len0, addHeapObject(buffer));\n      var r0 = getInt32Memory0()[retptr / 4 + 0];\n      var r1 = getInt32Memory0()[retptr / 4 + 1];\n      if (r1) {\n        throw takeObject(r0);\n      }\n    } finally {\n      wasm.__wbindgen_add_to_stack_pointer(16);\n    }\n  }\n};\nasync function __wbg_load(module, imports) {\n  if (typeof Response === \"function\" && module instanceof Response) {\n    if (typeof WebAssembly.instantiateStreaming === \"function\") {\n      try {\n        return await WebAssembly.instantiateStreaming(module, imports);\n      } catch (e) {\n        if (module.headers.get(\"Content-Type\") != \"application/wasm\") {\n          console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n        } else {\n          throw e;\n        }\n      }\n    }\n    const bytes = await module.arrayBuffer();\n    return await WebAssembly.instantiate(bytes, imports);\n  } else {\n    const instance = await WebAssembly.instantiate(module, imports);\n    if (instance instanceof WebAssembly.Instance) {\n      return { instance, module };\n    } else {\n      return instance;\n    }\n  }\n}\nfunction __wbg_get_imports() {\n  const imports = {};\n  imports.wbg = {};\n  imports.wbg.__wbg_new_28c511d9baebfa89 = function(arg0, arg1) {\n    const ret = new Error(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_memory = function() {\n    const ret = wasm.memory;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_buffer_12d079cc21e14bdb = function(arg0) {\n    const ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb = function(arg0, arg1, arg2) {\n    const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n  };\n  imports.wbg.__wbg_new_63b92bc8671ed464 = function(arg0) {\n    const ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_values_839f3396d5aac002 = function(arg0) {\n    const ret = getObject(arg0).values();\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_next_196c84450b364254 = function() {\n    return handleError(function(arg0) {\n      const ret = getObject(arg0).next();\n      return addHeapObject(ret);\n    }, arguments);\n  };\n  imports.wbg.__wbg_done_298b57d23c0fc80c = function(arg0) {\n    const ret = getObject(arg0).done;\n    return ret;\n  };\n  imports.wbg.__wbg_value_d93c65011f51a456 = function(arg0) {\n    const ret = getObject(arg0).value;\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_instanceof_Uint8Array_2b3bbecd033d19f6 = function(arg0) {\n    let result;\n    try {\n      result = getObject(arg0) instanceof Uint8Array;\n    } catch (_) {\n      result = false;\n    }\n    const ret = result;\n    return ret;\n  };\n  imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = typeof obj === \"string\" ? obj : void 0;\n    var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len1;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n  };\n  imports.wbg.__wbg_new_16b304a2cfa7ff4a = function() {\n    const ret = new Array();\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n    const ret = getStringFromWasm0(arg0, arg1);\n    return addHeapObject(ret);\n  };\n  imports.wbg.__wbg_push_a5b05aedc7234f9f = function(arg0, arg1) {\n    const ret = getObject(arg0).push(getObject(arg1));\n    return ret;\n  };\n  imports.wbg.__wbg_length_c20a40f15020d68a = function(arg0) {\n    const ret = getObject(arg0).length;\n    return ret;\n  };\n  imports.wbg.__wbg_set_a47bac70306a19a7 = function(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n  };\n  imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n  };\n  return imports;\n}\nfunction __wbg_init_memory(imports, maybe_memory) {\n}\nfunction __wbg_finalize_init(instance, module) {\n  wasm = instance.exports;\n  __wbg_init.__wbindgen_wasm_module = module;\n  cachedInt32Memory0 = null;\n  cachedUint8Memory0 = null;\n  return wasm;\n}\nasync function __wbg_init(input) {\n  if (wasm !== void 0)\n    return wasm;\n  if (typeof input === \"undefined\") {\n    input = new URL(\"index_bg.wasm\", void 0);\n  }\n  const imports = __wbg_get_imports();\n  if (typeof input === \"string\" || typeof Request === \"function\" && input instanceof Request || typeof URL === \"function\" && input instanceof URL) {\n    input = fetch(input);\n  }\n  __wbg_init_memory(imports);\n  const { instance, module } = await __wbg_load(await input, imports);\n  return __wbg_finalize_init(instance, module);\n}\nvar dist_default = __wbg_init;\n\n// wasm-binding.ts\nvar initialized = false;\nvar initWasm = async (module_or_path) => {\n  if (initialized) {\n    throw new Error(\"Already initialized. The `initWasm()` function can be used only once.\");\n  }\n  await dist_default(await module_or_path);\n  initialized = true;\n};\nvar Resvg2 = class extends Resvg {\n  /**\n   * @param {Uint8Array | string} svg\n   * @param {ResvgRenderOptions | undefined} options\n   */\n  constructor(svg, options) {\n    if (!initialized)\n      throw new Error(\"Wasm has not been initialized. Call `initWasm()` function.\");\n    const font = options?.font;\n    if (!!font && isCustomFontsOptions(font)) {\n      const serializableOptions = {\n        ...options,\n        font: {\n          ...font,\n          fontBuffers: void 0\n        }\n      };\n      super(svg, JSON.stringify(serializableOptions), font.fontBuffers);\n    } else {\n      super(svg, JSON.stringify(options));\n    }\n  }\n};\nfunction isCustomFontsOptions(value) {\n  return Object.prototype.hasOwnProperty.call(value, \"fontBuffers\");\n}\nexport {\n  Resvg2 as Resvg,\n  initWasm\n};\n"],
  "mappings": "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",
  "names": []
}
